{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0x4021342325260739fb3764b8e371704e038e17b4c54ac090fa2f9a2a2039a319",
      "kind": "uups"
    },
    {
      "address": "0x8198f5d8F8CfFE8f9C413d98a0A55aEB8ab9FbB7",
      "txHash": "0x0e43a5ce7a6451daf6defe14a89792b2f0fdc025487d4e167d7278ad0bc37701",
      "kind": "uups"
    }
  ],
  "impls": {
    "f767d8e5eb9bac4905f8cc5a498cd482759762b6aba3690d1336558f3edbeb17": {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0xef3ae07e95979c981f518e623e7a5c74620da0fdd82d3fab6d662f39a9aae5d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2587_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)6293_storage)dyn_storage",
            "src": "contracts/ReaperBaseStrategy.sol:27"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:28"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:29"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:31"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:45"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "vault",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:46"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:47"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:73"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:74"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:75"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:76"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:77"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "gWant",
            "type": "t_contract(IAToken)11474",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:36"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "want",
            "type": "t_contract(IERC20Upgradeable)1359",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:37"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "targetLtv",
            "type": "t_uint256",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:39"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "maxDeleverageLoopIterations",
            "type": "t_uint256",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:40"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "withdrawSlippageTolerance",
            "type": "t_uint256",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:41"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "flashLoanStatus",
            "type": "t_uint256",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:48"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "rewardClaimingTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:68"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "wftmToWantPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:75"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV2",
            "label": "geistToWftmPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV2.sol:76"
          }
        ],
        "types": {
          "t_contract(IAToken)11474": {
            "label": "contract IAToken"
          },
          "t_contract(IERC20Upgradeable)1359": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Harvest)6293_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategy.Harvest[]"
          },
          "t_struct(Harvest)6293_storage": {
            "label": "struct ReaperBaseStrategy.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2286_storage"
              }
            ]
          },
          "t_struct(Set)2286_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "35b0b2b379a6354fa1bb3cf604b72821d8bfafeb76a71aa3c058a8fcb4c58ff6": {
      "address": "0x21dF544947ba3E8b3c32561399E88B52Dc8b2823",
      "txHash": "0x60e4100812904374953c92beb27220b2bfb03818f4a9db30189759fd85e805f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2587_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)6293_storage)dyn_storage",
            "src": "contracts/ReaperBaseStrategy.sol:27"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:28"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:29"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:31"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:45"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "vault",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:46"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:47"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:73"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:74"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:75"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:76"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:77"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "gWant",
            "type": "t_contract(IAToken)11474",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:36"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "want",
            "type": "t_contract(IERC20Upgradeable)1359",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:37"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "targetLtv",
            "type": "t_uint256",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:39"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "maxDeleverageLoopIterations",
            "type": "t_uint256",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:40"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "withdrawSlippageTolerance",
            "type": "t_uint256",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:41"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "flashLoanStatus",
            "type": "t_uint256",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:48"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "rewardClaimingTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:68"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "wftmToWantPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:75"
          },
          {
            "contract": "TestReaperAutoCompoundFlashBorrowV3",
            "label": "geistToWftmPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/TestReaperAutoCompoundFlashBorrowV3.sol:76"
          }
        ],
        "types": {
          "t_contract(IAToken)11474": {
            "label": "contract IAToken"
          },
          "t_contract(IERC20Upgradeable)1359": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Harvest)6293_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategy.Harvest[]"
          },
          "t_struct(Harvest)6293_storage": {
            "label": "struct ReaperBaseStrategy.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2286_storage"
              }
            ]
          },
          "t_struct(Set)2286_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8255d4c5dd49a70be495bb9a79c8a769f3ed3017e3450555994ba39a2c3b47f1": {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0x37fd37cb314112dd27f61f41640545eb8a176964d38d1eae3a4fc3a54408a333",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2587_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)6194_storage)dyn_storage",
            "src": "contracts/ReaperBaseStrategy.sol:27"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:28"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:29"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:31"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:45"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "vault",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:46"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts/ReaperBaseStrategy.sol:47"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:73"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:74"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:75"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:76"
          },
          {
            "contract": "ReaperBaseStrategy",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts/ReaperBaseStrategy.sol:77"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "gWant",
            "type": "t_contract(IAToken)7975",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:35"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "want",
            "type": "t_contract(IERC20Upgradeable)1359",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:36"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "targetLtv",
            "type": "t_uint256",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:38"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "maxDeleverageLoopIterations",
            "type": "t_uint256",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:39"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "withdrawSlippageTolerance",
            "type": "t_uint256",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:40"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "flashLoanStatus",
            "type": "t_uint256",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:46"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "rewardClaimingTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:64"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "wftmToWantPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:71"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "geistToWftmPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:72"
          },
          {
            "contract": "ReaperAutoCompoundFlashBorrow",
            "label": "maxLtv",
            "type": "t_uint256",
            "src": "contracts/ReaperAutoCompoundFlashBorrow.sol:74"
          }
        ],
        "types": {
          "t_contract(IAToken)7975": {
            "label": "contract IAToken"
          },
          "t_contract(IERC20Upgradeable)1359": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Harvest)6194_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategy.Harvest[]"
          },
          "t_struct(Harvest)6194_storage": {
            "label": "struct ReaperBaseStrategy.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2587_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2587_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2286_storage"
              }
            ]
          },
          "t_struct(Set)2286_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1caf8126db96cc7a296efca072737eb670a364d4a36db3d97840559189349eec": {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0xbde81a45bcf76124c4bcae80196aea41006eb20485a28c87ca930392ce9224ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2476_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "want",
            "type": "t_address",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:24"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "emergencyExit",
            "type": "t_bool",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:27"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:28"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:29"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "steps",
            "type": "t_array(t_struct(StepTypeWithData)9316_storage)dyn_storage",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:65"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "cascadingAccess",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:85"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:93"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "vault",
            "type": "t_address",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:94"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:95"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:115"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:116"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:117"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:118"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "gWant",
            "type": "t_contract(IAToken)10611",
            "src": "contracts/ReaperStrategyGranary.sol:31"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "targetLtv",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:33"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "maxDeleverageLoopIterations",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:34"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "flashLoanStatus",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:40"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "rewardTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ReaperStrategyGranary.sol:56"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "maxLtv",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:58"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "minLeverageAmount",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:59"
          }
        ],
        "types": {
          "t_contract(IAToken)10611": {
            "label": "contract IAToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(StepTypeWithData)9316_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv4.StepTypeWithData[]"
          },
          "t_struct(StepTypeWithData)9316_storage": {
            "label": "struct ReaperBaseStrategyv4.StepTypeWithData",
            "members": [
              {
                "label": "stepType",
                "type": "t_enum(HarvestStepType)9301"
              },
              {
                "label": "path",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "percentageType",
                "type": "t_enum(StepPercentageType)9304"
              },
              {
                "label": "percentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(HarvestStepType)9301": {
            "label": "enum ReaperBaseStrategyv4.HarvestStepType",
            "members": [
              "Swap",
              "ChargeFees"
            ]
          },
          "t_enum(StepPercentageType)9304": {
            "label": "enum ReaperBaseStrategyv4.StepPercentageType",
            "members": [
              "Absolute",
              "TotalFee"
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2476_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2476_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2175_storage"
              }
            ]
          },
          "t_struct(Set)2175_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
