{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2A894f08FFB3D4A7c1526d3660c3D69750B3bbE9",
      "txHash": "0x0a07367590c4a954752746a86ef1ac8b7a7f7b1900ac1a92858363fe089aa4da",
      "kind": "uups"
    }
  ],
  "impls": {
    "da06008c102702d1234fcd3857fe9825d382cd1996797e409665b7ca5b6dc423": {
      "address": "0x6AD8889BE1634F1AF4e2bD7CCfA0362c71CEF2b4",
      "txHash": "0x19303ab7e75885018399b7273d4bb17c8a691c455cc84e7ef4c997a76a4c5a03",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2476_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "want",
            "type": "t_address",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:24"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "emergencyExit",
            "type": "t_bool",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:27"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:28"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:29"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "cascadingAccess",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:85"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:93"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "vault",
            "type": "t_address",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:94"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "strategistRemitter",
            "type": "t_address",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:95"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:115"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "callFee",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:116"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:117"
          },
          {
            "contract": "ReaperBaseStrategyv4",
            "label": "strategistFee",
            "type": "t_uint256",
            "src": "contracts/abstract/ReaperBaseStrategyv4.sol:118"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "gWant",
            "type": "t_contract(IAToken)10226",
            "src": "contracts/ReaperStrategyGranary.sol:31"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "targetLtv",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:33"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "maxDeleverageLoopIterations",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:34"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "flashLoanStatus",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:40"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "rewardTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ReaperStrategyGranary.sol:56"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "maxLtv",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:58"
          },
          {
            "contract": "ReaperStrategyGranary",
            "label": "minLeverageAmount",
            "type": "t_uint256",
            "src": "contracts/ReaperStrategyGranary.sol:59"
          }
        ],
        "types": {
          "t_contract(IAToken)10226": {
            "label": "contract IAToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2476_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2476_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2175_storage"
              }
            ]
          },
          "t_struct(Set)2175_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
